# this file's format:
#   pipe delimited
#   columns:
#     interface
#     function
#     params (as json array)
#     status: ok or err
#     expected response body (as json, only checked if status==ok)

# clients should skip blank lines, or lines that start with #
# clients should assume endpoints of localhost:9233
# clients should not validate requests (we intentionally include some invalid ones)
# clients should validate responses
#
# servers should validate requests and responses
# servers should bind to localhost:9233

# valid
B|echo|["hello"]|ok|"hello"
B|echo|["hello w\u00f6rld"]|ok|"hello w\u00f6rld"

# invalid types
B|echo|[2]|rpcerr|-32602
B|echo|[{"hello":"1"}]|rpcerr|-32602

# non-existance methods - should blow up on client
# need to reconsider these two, as the Java version
# emits rpcerr, which is probably also fine.
#C|echo|["hello"]|err|""
#A|echo2|["hello"]|err|""

A|add|[3,5]|ok|8
A|add|[3.3,5]|rpcerr|-32602
A|sqrt|[9]|ok|3.0
A|sqrt|[25.0]|ok|5.0
A|say_hi|[]|ok|{"hi":"hi"}
A|say_hi|["blah"]|rpcerr|-32602
A|repeat|[{"to_repeat":"yo", "count": 2, "force_uppercase": false}]|ok|{"status":"ok","count":2,"items":["yo","yo"]}
A|calc|[[2,3.0,6], "add"]|ok|11.0
A|calc|[[4,4,7], "multiply"]|ok|112.0
A|calc|[[2,3,"6"], "add"]|rpcerr|-32602
A|repeat_num|[2, 3]|ok|[2,2,2]

start_batch
A|sqrt|[36.0]|ok|6.0
A|say_hi|[]|ok|{"hi":"hi"}
end_batch